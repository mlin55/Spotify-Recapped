[{"/Users/matthewlin/Programming/Projects/Statify/frontend/src/index.js":"1","/Users/matthewlin/Programming/Projects/Statify/frontend/src/App.js":"2","/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/LoginPage.js":"3","/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/MainPage.js":"4","/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/ArtistTable.js":"5","/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/GenreTable.js":"6","/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/SongTable.js":"7","/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/Icons.js":"8"},{"size":265,"mtime":1641074469380,"results":"9","hashOfConfig":"10"},{"size":527,"mtime":1642025724769,"results":"11","hashOfConfig":"10"},{"size":1525,"mtime":1644112712147,"results":"12","hashOfConfig":"10"},{"size":5768,"mtime":1644112772099,"results":"13","hashOfConfig":"10"},{"size":2917,"mtime":1644100253079,"results":"14","hashOfConfig":"10"},{"size":744,"mtime":1643329978244,"results":"15","hashOfConfig":"10"},{"size":3071,"mtime":1644104944371,"results":"16","hashOfConfig":"10"},{"size":505,"mtime":1644104906447,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1gksrj6",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"39","usedDeprecatedRules":"36"},"/Users/matthewlin/Programming/Projects/Statify/frontend/src/index.js",[],["40","41"],"/Users/matthewlin/Programming/Projects/Statify/frontend/src/App.js",[],"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/LoginPage.js",["42"],"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/MainPage.js",["43","44","45","46","47","48","49","50","51","52","53"],"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/ArtistTable.js",["54","55","56","57","58"],"import { useState } from 'react';\nimport { Modal, Table, Button } from 'react-bootstrap';\nimport QuestionIcon from '../images/question-icon.png';\n\nexport default ({artists}) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    console.log(artists);\n\n    const displayList = (items) => {\n        let list = \"\";\n        for (let i = 0; i < items.length; i++) {\n            list += items[i];\n            if (i != items.length - 1) {\n                list += \", \";\n            }\n        }\n        if (list == \"\") {\n            list = \"Sorry, Spotify doesn't store that data currently :(\"\n        }\n        return list;\n    }\n\n    return(\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Relative Popularity</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            This column of the table displays the popularity of each artist across Spotify's entire userbase relative to the other artists shown. This is different from the artist's rank, which is based on how much you have listened to each artist. For example, a relative popularity of 1 indicates that artist is the most listened to artist in the table across the Spotify userbase, even though they might have a different rank based on your own listening.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Table variant='dark' className='table' striped bordered>\n          <tr>\n            <th className='padding-column'></th>\n            <th id='artist-rank-column'>\n              Rank\n            </th>\n            <th className='padding-column'></th>\n            <th id='artist-artist-column'>\n              Artist\n            </th>\n            <th id='genres-column'>\n              Genres\n            </th>\n            <th id='artist-popularity-column'>\n              Relative popularity\n              <button id='artist-question-click' onClick={handleShow}>\n                <img src={QuestionIcon} className='question-icon' />\n              </button>\n            </th>\n            <th className='padding-column'></th>\n          </tr>\n          {artists.map((artist, i) => (\n              <tr key={i}>\n                <td></td>\n                <td>\n                    {i + 1}.\n                </td>\n                <td></td>\n                <td>\n                    <img src={artist.images[0].url} className='image' />{artist.name}\n                </td>\n                <td>\n                    {displayList(artist.genres)}\n                </td>\n                <td>\n                  {artist.popularity}.\n                </td>\n                <td></td>\n              </tr>\n          ))}\n        </Table>\n      </>\n    );\n}","/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/GenreTable.js",["59"],"import { Table } from 'react-bootstrap';\n\nexport default ({genres}) => {\n    return(\n      <Table variant='dark' className='table' striped bordered>\n        <tr>\n          <th id='padding-column'></th>\n          <th id='rank-column'>\n            Rank\n          </th>\n          <th id='padding-column'></th>\n          <th id='artist-column'>\n            Genre\n          </th>\n          <th id='padding-column'></th>\n        </tr>\n        {genres.map((genre, i) => (\n            <tr key={i}>\n              <td></td>\n              <td>\n                  {i + 1}.\n              </td>\n              <td></td>\n              <td>\n                {genre}\n              </td>\n              <td></td>\n            </tr>\n        ))}\n      </Table>\n    );\n}","/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/SongTable.js",["60","61","62","63","64"],"import { useState } from 'react';\nimport { Table, Modal, Button } from 'react-bootstrap';\nimport QuestionIcon from '../images/question-icon.png';\n\nexport default ({songs}) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const displayList = (items) => {\n        let list = \"\";\n        for (let i = 0; i < items.length; i++) {\n            list += items[i];\n            if (i != items.length - 1) {\n                list += \", \";\n            }\n        }\n        if (list == \"\") {\n            list = \"Sorry, Spotify doesn't store that data currently :(\"\n        }\n        return list;\n    }\n\n    return(\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Relative Popularity</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            This column of the table displays the popularity of each song across Spotify's entire userbase relative to the other songs shown. This is different from the song's rank, which is based on how much you have listened to each song. For example, a relative popularity of 1 indicates that song is the most listened to song in the table across the Spotify userbase, even though it might have a different rank based on your own listening.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Table variant='dark' className='table' striped bordered>\n          <tr>\n            <th className='padding-column'></th>\n            <th id='song-rank-column'>\n              Rank\n            </th>\n            <th className='padding-column'></th>\n            <th id='song-column'>\n              Song\n            </th>\n            <th id='song-artists-column'>\n              Artists\n            </th>\n            <th id='album-column'>\n              Album\n            </th>\n            <th className='padding-column'></th>\n            <th id='song-popularity-column'>\n              Relative popularity\n              <button id='song-question-click' onClick={handleShow}>\n                <img src={QuestionIcon} className='question-icon' />\n              </button>\n            </th>\n            <th className='padding-column'></th>\n          </tr>\n          {songs.map((song, i) => (\n              <tr key={i}>\n                <td></td>\n                <td>\n                    {i + 1}.\n                </td>\n                <td></td>\n                <td>\n                  <img src={song.image.url} className='image' />{song.name}\n                </td>\n                <td>\n                    {displayList(song.artists)}\n                </td>\n                <td>\n                    {song.album}\n                </td>\n                <td></td>\n                <td>\n                  {song.popularity}.\n                </td>\n                <td></td>\n              </tr>\n          ))}\n        </Table>\n      </>\n    );\n}",["65","66"],"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/Icons.js",["67","68","69","70","71"],"import GithubIcon from '../images/github-icon.png';\nimport SpotifyIcon from '../images/spotify-icon.png';\n\nexport default () => {\n\n    return(\n        <div id='icon-container'>\n          <p>Built using the Spotify Web API</p>\n          <a href='https://developer.spotify.com/documentation/web-api/' target='_blank' ><img src={SpotifyIcon} className='icons' /></a>\n          <a href='https://github.com/mlin55/Statify' target='_blank' ><img src={GithubIcon} className='icons' /></a>\n        </div>\n    );\n}",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":3,"column":1,"nodeType":"78","endLine":26,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":10,"column":1,"nodeType":"78","endLine":161,"endColumn":2},{"ruleId":"79","severity":1,"message":"80","line":31,"column":31,"nodeType":"81","messageId":"82","endLine":31,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":33,"column":36,"nodeType":"81","messageId":"82","endLine":33,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":35,"column":43,"nodeType":"81","messageId":"82","endLine":35,"endColumn":45},{"ruleId":"79","severity":1,"message":"80","line":41,"column":38,"nodeType":"81","messageId":"82","endLine":41,"endColumn":40},{"ruleId":"79","severity":1,"message":"80","line":43,"column":36,"nodeType":"81","messageId":"82","endLine":43,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":45,"column":43,"nodeType":"81","messageId":"82","endLine":45,"endColumn":45},{"ruleId":"79","severity":1,"message":"80","line":53,"column":36,"nodeType":"81","messageId":"82","endLine":53,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":55,"column":43,"nodeType":"81","messageId":"82","endLine":55,"endColumn":45},{"ruleId":"79","severity":1,"message":"80","line":65,"column":32,"nodeType":"81","messageId":"82","endLine":65,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":67,"column":39,"nodeType":"81","messageId":"82","endLine":67,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":5,"column":1,"nodeType":"78","endLine":86,"endColumn":2},{"ruleId":"79","severity":1,"message":"83","line":18,"column":19,"nodeType":"81","messageId":"82","endLine":18,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":22,"column":18,"nodeType":"81","messageId":"82","endLine":22,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":59,"column":17,"nodeType":"86","endLine":59,"endColumn":69},{"ruleId":"84","severity":1,"message":"85","line":72,"column":21,"nodeType":"86","endLine":72,"endColumn":73},{"ruleId":"76","severity":1,"message":"77","line":3,"column":1,"nodeType":"78","endLine":32,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":5,"column":1,"nodeType":"78","endLine":92,"endColumn":2},{"ruleId":"79","severity":1,"message":"83","line":16,"column":19,"nodeType":"81","messageId":"82","endLine":16,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":20,"column":18,"nodeType":"81","messageId":"82","endLine":20,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":61,"column":17,"nodeType":"86","endLine":61,"endColumn":69},{"ruleId":"84","severity":1,"message":"85","line":74,"column":19,"nodeType":"86","endLine":74,"endColumn":65},{"ruleId":"72","replacedBy":"87"},{"ruleId":"74","replacedBy":"88"},{"ruleId":"76","severity":1,"message":"77","line":4,"column":1,"nodeType":"78","endLine":13,"endColumn":2},{"ruleId":"89","severity":1,"message":"90","line":9,"column":11,"nodeType":"86","messageId":"91","endLine":9,"endColumn":91,"fix":"92"},{"ruleId":"84","severity":1,"message":"85","line":9,"column":91,"nodeType":"86","endLine":9,"endColumn":134},{"ruleId":"89","severity":1,"message":"90","line":10,"column":11,"nodeType":"86","messageId":"91","endLine":10,"endColumn":72,"fix":"93"},{"ruleId":"84","severity":1,"message":"85","line":10,"column":72,"nodeType":"86","endLine":10,"endColumn":114},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["94"],["95"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"96","text":"97"},{"range":"98","text":"97"},"no-global-assign","no-unsafe-negation",[314,314]," rel=\"noreferrer\"",[433,433]]