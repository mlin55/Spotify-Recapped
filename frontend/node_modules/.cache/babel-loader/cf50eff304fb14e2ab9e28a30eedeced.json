{"ast":null,"code":"var _jsxFileName = \"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport SongTable from './SongTable';\nimport ArtistTable from './ArtistTable';\nimport GenreTable from './GenreTable';\nimport { useState, useEffect } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [songs, setSongs] = useState();\n  const [artists, setArtists] = useState();\n  const [genres, setGenres] = useState();\n  const [settings, setSettings] = useState({\n    category: \"Songs\",\n    timeframe: \"shortTerm\"\n  });\n\n  const displayTable = () => {\n    if (songs == null || artists == null || genres == null) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"lds-roller\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 74\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 85\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 96\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 107\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 118\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    }\n\n    if (settings.category == \"Songs\") {\n      let songsToDisplay = songs.shortTerm;\n\n      if (settings.timeframe == \"mediumTerm\") {\n        songsToDisplay = songs.mediumTerm;\n      } else if (settings.timeframe == \"longTerm\") {\n        songsToDisplay = songs.longTerm;\n      }\n\n      return /*#__PURE__*/_jsxDEV(SongTable, {\n        songs: songsToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this);\n    } else if (settings.category == \"Artists\") {\n      let artistsToDisplay = artists.shortTerm;\n\n      if (settings.timeframe == \"mediumTerm\") {\n        artistsToDisplay = artists.mediumTerm;\n      } else if (settings.timeframe == \"longTerm\") {\n        artistsToDisplay = artists.longTerm;\n      }\n\n      return /*#__PURE__*/_jsxDEV(ArtistTable, {\n        artists: artistsToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this);\n    } else {\n      let genresToDisplay = genres.shortTerm;\n\n      if (settings.timeframe == \"mediumTerm\") {\n        genresToDisplay = genres.mediumTerm;\n      } else if (settings.timeframe == \"longTerm\") {\n        genresToDisplay = genres.longTerm;\n      }\n\n      return /*#__PURE__*/_jsxDEV(GenreTable, {\n        genres: genresToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  const displayTimeframe = () => {\n    if (settings.timeframe == \"shortTerm\") {\n      return \"Last 4 weeks\";\n    } else if (settings.timeframe == \"mediumTerm\") {\n      return \"Last 6 months\";\n    } else {\n      return \"All time\";\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      let data = await axios.get(process.env.REACT_APP_API_URL);\n      setSongs(data.data.topSongs);\n      setArtists(data.data.topArtists);\n      setGenres(data.data.topGenres);\n    }\n\n    fetchData();\n  }, []);\n  /*\n  useEffect(() => {\n      console.log(settings);\n  }, [settings]);\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-page-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginTop: '4%'\n        },\n        children: \"Statify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dropdown-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n          className: \"dropdown\",\n          variant: \"secondary\",\n          size: \"lg\",\n          title: \"Category\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: \"Songs\",\n              timeframe: settings.timeframe\n            }),\n            children: \"Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: \"Artists\",\n              timeframe: settings.timeframe\n            }),\n            children: \"Artists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: \"Genres\",\n              timeframe: settings.timeframe\n            }),\n            children: \"Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          className: \"dropdown\",\n          variant: \"secondary\",\n          size: \"lg\",\n          title: \"Timeframe\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: settings.category,\n              timeframe: \"shortTerm\"\n            }),\n            children: \"Last month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: settings.category,\n              timeframe: \"mediumTerm\"\n            }),\n            children: \"Last 6 months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: settings.category,\n              timeframe: \"longTerm\"\n            }),\n            children: \"All time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), songs != null && artists != null && genres != null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Category: \", settings.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Timeframe: \", displayTimeframe()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), displayTable()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}, \"IZYzvStjINReBrgGbAw+1HG7I8c=\");","map":{"version":3,"sources":["/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/MainPage.js"],"names":["SongTable","ArtistTable","GenreTable","useState","useEffect","Dropdown","DropdownButton","axios","songs","setSongs","artists","setArtists","genres","setGenres","settings","setSettings","category","timeframe","displayTable","songsToDisplay","shortTerm","mediumTerm","longTerm","artistsToDisplay","genresToDisplay","displayTimeframe","fetchData","data","get","process","env","REACT_APP_API_URL","topSongs","topArtists","topGenres","marginTop"],"mappings":"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","sourcesContent":["import SongTable from './SongTable';\nimport ArtistTable from './ArtistTable';\nimport GenreTable from './GenreTable';\n\nimport { useState, useEffect } from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport axios from 'axios';\n\nexport default () => {\n\n    const [songs, setSongs] = useState();\n    const [artists, setArtists] = useState();\n    const [genres, setGenres] = useState();\n\n    const [settings, setSettings] = useState({\n        category: \"Songs\",\n        timeframe: \"shortTerm\"\n    });\n\n    const displayTable = () => {\n        if (songs == null || artists == null || genres == null) {\n            return (\n              <>\n                {/* Loading spinner code from loading.io */}\n                <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n              </>\n            );\n        }\n        if (settings.category == \"Songs\") {\n            let songsToDisplay = songs.shortTerm;\n            if (settings.timeframe == \"mediumTerm\") {\n                songsToDisplay = songs.mediumTerm;\n            } else if (settings.timeframe == \"longTerm\") {\n                songsToDisplay = songs.longTerm;\n            }\n            return (\n              <SongTable songs={songsToDisplay} />\n            );\n        } else if (settings.category == \"Artists\") {\n            let artistsToDisplay = artists.shortTerm;\n            if (settings.timeframe == \"mediumTerm\") {\n                artistsToDisplay = artists.mediumTerm;\n            } else if (settings.timeframe == \"longTerm\") {\n                artistsToDisplay = artists.longTerm;\n            }\n            return (\n              <ArtistTable artists={artistsToDisplay} />\n            );\n        } else {\n            let genresToDisplay = genres.shortTerm;\n            if (settings.timeframe == \"mediumTerm\") {\n                genresToDisplay = genres.mediumTerm;\n            } else if (settings.timeframe == \"longTerm\") {\n                genresToDisplay = genres.longTerm;\n            }\n            return (\n              <GenreTable genres={genresToDisplay} />\n            );\n        }\n    }\n\n    const displayTimeframe = () => {\n        if (settings.timeframe == \"shortTerm\") {\n            return \"Last 4 weeks\";\n        } else if (settings.timeframe == \"mediumTerm\") {\n            return \"Last 6 months\";\n        } else {\n            return \"All time\";\n        }\n    }\n\n    useEffect(() => {\n            async function fetchData() {\n                let data = await axios.get(process.env.REACT_APP_API_URL);\n                setSongs(data.data.topSongs);\n                setArtists(data.data.topArtists);\n                setGenres(data.data.topGenres);\n\n            }\n            fetchData();\n        },\n    []);\n\n\n    /*\n    useEffect(() => {\n        console.log(settings);\n    }, [settings]);\n    */\n\n    return(\n        <>\n          <div id='main-page-background'>\n            <h1 style={{marginTop: '4%'}}>Statify</h1>\n            <div id='dropdown-wrapper'>\n              <DropdownButton className='dropdown' variant='secondary' size='lg' title='Category'>\n                <Dropdown.Item onClick={() => setSettings({\n                    category: \"Songs\",\n                    timeframe: settings.timeframe\n                })}>\n                  Songs\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => setSettings({\n                    category: \"Artists\",\n                    timeframe: settings.timeframe\n                })}>\n                  Artists\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => setSettings({\n                    category: \"Genres\",\n                    timeframe: settings.timeframe\n                })}>\n                  Genres\n                </Dropdown.Item>\n              </DropdownButton>\n              <DropdownButton className='dropdown' variant='secondary' size='lg' title='Timeframe'>\n                <Dropdown.Item onClick={() => setSettings({\n                    category: settings.category,\n                    timeframe: \"shortTerm\"\n                })}>\n                  Last month\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => setSettings({\n                    category: settings.category,\n                    timeframe: \"mediumTerm\"\n                })}>\n                  Last 6 months\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => setSettings({\n                    category: settings.category,\n                    timeframe: \"longTerm\"\n                })}>\n                  All time\n                </Dropdown.Item>\n              </DropdownButton>\n            </div>\n            {\n                (songs != null && artists != null && genres != null) && \n                <div>\n                  <h4>Category: {settings.category}</h4>\n                  <h4>Timeframe: {displayTimeframe()}</h4>\n                </div>\n            }\n            {displayTable()}\n          </div>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}