{"ast":null,"code":"var _jsxFileName = \"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/SongTable.js\";\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default (_ref => {\n  let {\n    songs\n  } = _ref;\n\n  const displayList = items => {\n    let list = \"\";\n\n    for (let i = 0; i < items.length; i++) {\n      list += items[i];\n\n      if (i != items.length - 1) {\n        list += \", \";\n      }\n    }\n\n    if (list == \"\") {\n      list = \"Sorry, Spotify doesn't store that data currently :(\";\n    }\n\n    return list;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: songs != null && /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"dark\",\n      className: \"table\",\n      striped: true,\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"padding-column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"rank-column\",\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"padding-column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"song-column\",\n          children: \"Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"artists-column\",\n          children: \"Artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"album-column\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"padding-column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this), songs.map((song, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [i + 1, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.image.url,\n            className: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), song.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: displayList(song.artists)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: song.album\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n});","map":{"version":3,"sources":["/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/SongTable.js"],"names":["Table","songs","displayList","items","list","i","length","map","song","image","url","name","artists","album"],"mappings":";AAAA,SAASA,KAAT,QAAsB,iBAAtB;;;AAEA,gBAAe,QAAa;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;;AAExB,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCD,MAAAA,IAAI,IAAID,KAAK,CAACE,CAAD,CAAb;;AACA,UAAIA,CAAC,IAAIF,KAAK,CAACG,MAAN,GAAe,CAAxB,EAA2B;AACvBF,QAAAA,IAAI,IAAI,IAAR;AACH;AACJ;;AACD,QAAIA,IAAI,IAAI,EAAZ,EAAgB;AACZA,MAAAA,IAAI,GAAG,qDAAP;AACH;;AACD,WAAOA,IAAP;AACH,GAZD;;AAcA,sBACI;AAAA,cACGH,KAAK,IAAI,IAAT,iBACC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,OAAhC;AAAwC,MAAA,OAAO,MAA/C;AAAgD,MAAA,QAAQ,MAAxD;AAAA,8BACE;AAAA,gCACE;AAAI,UAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAI,UAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAI,UAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAI,UAAA,EAAE,EAAC,gBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE;AAAI,UAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAeE;AAAI,UAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAkBGA,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOH,CAAP,kBACP;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBACKA,CAAC,GAAG,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEG,IAAI,CAACC,KAAL,CAAWC,GAArB;AAA0B,YAAA,SAAS,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,kBADJ,EACmDF,IAAI,CAACG,IADxD;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAA,oBACKT,WAAW,CAACM,IAAI,CAACI,OAAN;AADhB;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE;AAAA,oBACKJ,IAAI,CAACK;AADV;AAAA;AAAA;AAAA;AAAA,gBAZF,eAeE;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AA4CH,CA5DD","sourcesContent":["import { Table } from 'react-bootstrap';\n\nexport default ({songs}) => {\n\n    const displayList = (items) => {\n        let list = \"\";\n        for (let i = 0; i < items.length; i++) {\n            list += items[i];\n            if (i != items.length - 1) {\n                list += \", \";\n            }\n        }\n        if (list == \"\") {\n            list = \"Sorry, Spotify doesn't store that data currently :(\"\n        }\n        return list;\n    }\n\n    return(\n        <>\n          {songs != null && \n            <Table variant='dark' className='table' striped bordered>\n              <tr>\n                <th id='padding-column'></th>\n                <th id='rank-column'>\n                  Rank\n                </th>\n                <th id='padding-column'></th>\n                <th id='song-column'>\n                  Song\n                </th>\n                <th id='artists-column'>\n                  Artists\n                </th>\n                <th id='album-column'>\n                  Album\n                </th>\n                <th id='padding-column'></th>\n              </tr>\n              {songs.map((song, i) => (\n                  <tr>\n                    <td></td>\n                    <td>\n                        {i + 1}.\n                    </td>\n                    <td></td>\n                    <td>\n                        <img src={song.image.url} className='image' />{song.name}\n                    </td>\n                    <td>\n                        {displayList(song.artists)}\n                    </td>\n                    <td>\n                        {song.album}\n                    </td>\n                    <td></td>\n                  </tr>\n              ))}\n            </Table>\n          }\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}