{"ast":null,"code":"var _jsxFileName = \"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Dropdown, DropdownButton, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [songs, setSongs] = useState();\n  const [artists, setArtists] = useState();\n  const [genres, setGenres] = useState();\n  const [settings, setSettings] = useState({\n    category: \"songs\",\n    timeframe: \"shortTerm\"\n  });\n  useEffect(() => {\n    async function fetchData() {\n      let data = await axios.get(process.env.REACT_APP_API_URL);\n      setSongs(data.data.topSongs);\n      setArtists(data.data.topArtists);\n      setGenres(data.data.topGenres);\n      console.log(data.data.topArtists);\n    }\n\n    fetchData();\n  }, []);\n  /*\n      useEffect(() => {\n          console.log(settings);\n      }, [settings]);\n  */\n\n  const displayList = items => {\n    let list = \"\";\n\n    for (let i = 0; i < items.length; i++) {\n      list += items[i];\n\n      if (i != items.length - 1) {\n        list += \", \";\n      }\n    }\n\n    return list;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-page-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dropdown-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n          className: \"dropdown\",\n          variant: \"secondary\",\n          size: \"lg\",\n          title: \"Category\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: \"songs\",\n              timeframe: settings.timeframe\n            }),\n            children: \"Songs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: \"artists\",\n              timeframe: settings.timeframe\n            }),\n            children: \"Artists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: \"genres\",\n              timeframe: settings.timeframe\n            }),\n            children: \"Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          className: \"dropdown\",\n          variant: \"secondary\",\n          size: \"lg\",\n          title: \"Time period\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: settings.category,\n              timeframe: \"shortTerm\"\n            }),\n            children: \"Last month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: settings.category,\n              timeframe: \"mediumTerm\"\n            }),\n            children: \"Last 6 months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSettings({\n              category: settings.category,\n              timeframe: \"longTerm\"\n            }),\n            children: \"All time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), artists != null && /*#__PURE__*/_jsxDEV(Table, {\n        variant: \"dark\",\n        className: \"table\",\n        striped: true,\n        bordered: true,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"padding-column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"rank-column\",\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"padding-column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"artist-column\",\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"genres-column\",\n            children: \"Genres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"padding-column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }, this), artists.longTerm.map((artist, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [i + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: artist.images[0].url,\n              className: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), artist.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: displayList(artist.genres)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}, \"wv9MSLP3TltfaBK6h7rBwPO28wg=\");","map":{"version":3,"sources":["/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/MainPage.js"],"names":["useState","useEffect","Dropdown","DropdownButton","Table","axios","songs","setSongs","artists","setArtists","genres","setGenres","settings","setSettings","category","timeframe","fetchData","data","get","process","env","REACT_APP_API_URL","topSongs","topArtists","topGenres","console","log","displayList","items","list","i","length","longTerm","map","artist","images","url","name"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Dropdown, DropdownButton, Table } from 'react-bootstrap';\nimport axios from 'axios';\n\nexport default () => {\n\n    const [songs, setSongs] = useState();\n    const [artists, setArtists] = useState();\n    const [genres, setGenres] = useState();\n\n    const [settings, setSettings] = useState({\n        category: \"songs\",\n        timeframe: \"shortTerm\"\n    });\n\n    useEffect(() => {\n            async function fetchData() {\n                let data = await axios.get(process.env.REACT_APP_API_URL);\n                setSongs(data.data.topSongs);\n                setArtists(data.data.topArtists);\n                setGenres(data.data.topGenres);\n\n\n\n                console.log(data.data.topArtists);\n            }\n            fetchData();\n        },\n    []);\n/*\n    useEffect(() => {\n        console.log(settings);\n    }, [settings]);\n*/\n    const displayList = (items) => {\n        let list = \"\";\n        for (let i = 0; i < items.length; i++) {\n            list += items[i];\n            if (i != items.length - 1) {\n                list += \", \";\n            }\n        }\n        return list;\n    }\n\n    return(\n        <>\n          <div id='main-page-background'>\n            <div id='dropdown-wrapper'>\n              <DropdownButton className='dropdown' variant='secondary' size='lg' title='Category'>\n                <Dropdown.Item onClick={() => setSettings({\n                    category: \"songs\",\n                    timeframe: settings.timeframe\n                })}>\n                  Songs\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => setSettings({\n                    category: \"artists\",\n                    timeframe: settings.timeframe\n                })}>\n                  Artists\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => setSettings({\n                    category: \"genres\",\n                    timeframe: settings.timeframe\n                })}>\n                  Genres\n                </Dropdown.Item>\n              </DropdownButton>\n              <DropdownButton className='dropdown' variant='secondary' size='lg' title='Time period'>\n                <Dropdown.Item onClick={() => setSettings({\n                    category: settings.category,\n                    timeframe: \"shortTerm\"\n                })}>\n                  Last month\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => setSettings({\n                    category: settings.category,\n                    timeframe: \"mediumTerm\"\n                })}>\n                  Last 6 months\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item onClick={() => setSettings({\n                    category: settings.category,\n                    timeframe: \"longTerm\"\n                })}>\n                  All time\n                </Dropdown.Item>\n              </DropdownButton>\n            </div>\n            {/* DEFAULT TABLE\n              {songs != null && \n                  <Table variant='dark' className='table' striped bordered>\n                    <tr>\n                      <th id='padding-column'></th>\n                      <th id='rank-column'>\n                        Rank\n                      </th>\n                      <th id='padding-column'></th>\n                      <th id='song-column'>\n                        Song\n                      </th>\n                      <th id='artists-column'>\n                        Artists\n                      </th>\n                      <th id='album-column'>\n                        Album\n                      </th>\n                      <th id='padding-column'></th>\n                    </tr>\n                    {songs.longTerm.map((song, i) => (\n                        <tr>\n                          <td></td>\n                          <td>\n                              {i + 1}.\n                          </td>\n                          <td></td>\n                          <td>\n                              <img src={song.image.url} className='image' />{song.name}\n                          </td>\n                          <td>\n                              {displayArtists(song.artists)}\n                          </td>\n                          <td>\n                              {song.album}\n                          </td>\n                          <td></td>\n                        </tr>\n                    ))}\n                  </Table>\n              }\n            */}\n            {artists != null && \n                <Table variant='dark' className='table' striped bordered>\n                  <tr>\n                    <th id='padding-column'></th>\n                    <th id='rank-column'>\n                      Rank\n                    </th>\n                    <th id='padding-column'></th>\n                    <th id='artist-column'>\n                      Artist\n                    </th>\n                    <th id='genres-column'>\n                      Genres\n                    </th>\n                    <th id='padding-column'></th>\n                  </tr>\n                  {artists.longTerm.map((artist, i) => (\n                      <tr>\n                        <td></td>\n                        <td>\n                            {i + 1}.\n                        </td>\n                        <td></td>\n                        <td>\n                            <img src={artist.images[0].url} className='image' />{artist.name}\n                        </td>\n                        <td>\n                            {displayList(artist.genres)}\n                        </td>\n                        <td></td>\n                      </tr>\n                  ))}\n                </Table>\n            }\n        \n          </div>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}