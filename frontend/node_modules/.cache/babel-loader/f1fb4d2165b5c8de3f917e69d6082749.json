{"ast":null,"code":"var _jsxFileName = \"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/ArtistTable.js\";\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (_ref => {\n  let {\n    artists\n  } = _ref;\n  console.log(artists);\n\n  const displayList = items => {\n    let list = \"\";\n\n    for (let i = 0; i < items.length; i++) {\n      list += items[i];\n\n      if (i != items.length - 1) {\n        list += \", \";\n      }\n    }\n\n    if (list == \"\") {\n      list = \"Sorry, Spotify doesn't store that data currently :(\";\n    }\n\n    return list;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    variant: \"dark\",\n    className: \"table\",\n    striped: true,\n    bordered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        id: \"padding-column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        id: \"rank-column\",\n        children: \"Rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        id: \"padding-column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        id: \"artist-column\",\n        children: \"Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        id: \"genres-column\",\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Relative popularity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        id: \"padding-column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [i + 1, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.images[0].url,\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), artist.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: displayList(artist.genres)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: artist.popularity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/ArtistTable.js"],"names":["Table","artists","console","log","displayList","items","list","i","length","map","artist","images","url","name","genres","popularity"],"mappings":";AAAA,SAASA,KAAT,QAAsB,iBAAtB;;AAEA,gBAAe,QAAe;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAE1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,QAAMG,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCD,MAAAA,IAAI,IAAID,KAAK,CAACE,CAAD,CAAb;;AACA,UAAIA,CAAC,IAAIF,KAAK,CAACG,MAAN,GAAe,CAAxB,EAA2B;AACvBF,QAAAA,IAAI,IAAI,IAAR;AACH;AACJ;;AACD,QAAIA,IAAI,IAAI,EAAZ,EAAgB;AACZA,MAAAA,IAAI,GAAG,qDAAP;AACH;;AACD,WAAOA,IAAP;AACH,GAZD;;AAcA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAwC,IAAA,OAAO,MAA/C;AAAgD,IAAA,QAAQ,MAAxD;AAAA,4BACE;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAI,QAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAI,QAAA,EAAE,EAAC,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAI,QAAA,EAAE,EAAC,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE;AAAI,QAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAkBGL,OAAO,CAACQ,GAAR,CAAY,CAACC,MAAD,EAASH,CAAT,kBACT;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBACKA,CAAC,GAAG,CADT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEG,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,GAA3B;AAAgC,UAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,EACyDF,MAAM,CAACG,IADhE;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAA,kBACKT,WAAW,CAACM,MAAM,CAACI,MAAR;AADhB;AAAA;AAAA;AAAA;AAAA,cATF,eAYE;AAAA,kBACGJ,MAAM,CAACK;AADV;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA,OAASR,CAAT;AAAA;AAAA;AAAA;AAAA,YADH,CAlBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH,CA1DD","sourcesContent":["import { Table } from 'react-bootstrap';\n\nexport default ({artists}) => {\n\n    console.log(artists);\n\n    const displayList = (items) => {\n        let list = \"\";\n        for (let i = 0; i < items.length; i++) {\n            list += items[i];\n            if (i != items.length - 1) {\n                list += \", \";\n            }\n        }\n        if (list == \"\") {\n            list = \"Sorry, Spotify doesn't store that data currently :(\"\n        }\n        return list;\n    }\n\n    return(\n        <Table variant='dark' className='table' striped bordered>\n          <tr>\n            <th id='padding-column'></th>\n            <th id='rank-column'>\n              Rank\n            </th>\n            <th id='padding-column'></th>\n            <th id='artist-column'>\n              Artist\n            </th>\n            <th id='genres-column'>\n              Genres\n            </th>\n            <th>\n              Relative popularity\n            </th>\n            <th id='padding-column'></th>\n          </tr>\n          {artists.map((artist, i) => (\n              <tr key={i}>\n                <td></td>\n                <td>\n                    {i + 1}.\n                </td>\n                <td></td>\n                <td>\n                    <img src={artist.images[0].url} className='image' />{artist.name}\n                </td>\n                <td>\n                    {displayList(artist.genres)}\n                </td>\n                <td>\n                  {artist.popularity}\n                </td>\n                <td></td>\n              </tr>\n          ))}\n        </Table>\n    );\n}"]},"metadata":{},"sourceType":"module"}