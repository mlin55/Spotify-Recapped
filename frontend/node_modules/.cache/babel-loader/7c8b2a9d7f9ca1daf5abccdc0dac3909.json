{"ast":null,"code":"var _jsxFileName = \"/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/SongTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Table, Modal, Button } from 'react-bootstrap';\nimport QuestionIcon from '../images/question-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(_ref => {\n  _s();\n\n  let {\n    songs\n  } = _ref;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const displayList = items => {\n    let list = \"\";\n\n    for (let i = 0; i < items.length; i++) {\n      list += items[i];\n\n      if (i != items.length - 1) {\n        list += \", \";\n      }\n    }\n\n    if (list == \"\") {\n      list = \"Sorry, Spotify doesn't store that data currently :(\";\n    }\n\n    return list;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Relative Popularity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"This column of the table displays the popularity of each song across Spotify's entire userbase relative to the other songs shown. This is different from the song's rank, which is based on how much you have listened to each song. For example, a relative popularity of 1 indicates that song is the most listened to song in the table across the Spotify userbase, even though it might have a different rank based on your own listening.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Got it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"dark\",\n      className: \"table\",\n      striped: true,\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"padding-column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"rank-column\",\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"padding-column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"song-column\",\n          children: \"Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"artists-column\",\n          children: \"Artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"album-column\",\n          children: \"Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"padding-column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"popularity-column\",\n          children: [\"Relative popularity\", /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"song-question-click\",\n            onClick: handleShow,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: QuestionIcon,\n              className: \"question-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"padding-column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), songs.map((song, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [i + 1, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: song.image.url,\n            className: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), song.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: displayList(song.artists)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: song.album\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [song.popularity, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");","map":{"version":3,"sources":["/Users/matthewlin/Programming/Projects/Statify/frontend/src/components/SongTable.js"],"names":["useState","Table","Modal","Button","QuestionIcon","songs","show","setShow","handleClose","handleShow","displayList","items","list","i","length","map","song","image","url","name","artists","album","popularity"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Table, Modal, Button } from 'react-bootstrap';\nimport QuestionIcon from '../images/question-icon.png';\n\nexport default ({songs}) => {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const displayList = (items) => {\n        let list = \"\";\n        for (let i = 0; i < items.length; i++) {\n            list += items[i];\n            if (i != items.length - 1) {\n                list += \", \";\n            }\n        }\n        if (list == \"\") {\n            list = \"Sorry, Spotify doesn't store that data currently :(\"\n        }\n        return list;\n    }\n\n    return(\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Relative Popularity</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            This column of the table displays the popularity of each song across Spotify's entire userbase relative to the other songs shown. This is different from the song's rank, which is based on how much you have listened to each song. For example, a relative popularity of 1 indicates that song is the most listened to song in the table across the Spotify userbase, even though it might have a different rank based on your own listening.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Got it\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <Table variant='dark' className='table' striped bordered>\n          <tr>\n            <th id='padding-column'></th>\n            <th id='rank-column'>\n              Rank\n            </th>\n            <th id='padding-column'></th>\n            <th id='song-column'>\n              Song\n            </th>\n            <th id='artists-column'>\n              Artists\n            </th>\n            <th id='album-column'>\n              Album\n            </th>\n            <th id='padding-column'></th>\n            <th id='popularity-column'>\n              Relative popularity\n              <button id='song-question-click' onClick={handleShow}>\n                <img src={QuestionIcon} className='question-icon' />\n              </button>\n            </th>\n            <th id='padding-column'></th>\n          </tr>\n          {songs.map((song, i) => (\n              <tr key={i}>\n                <td></td>\n                <td>\n                    {i + 1}.\n                </td>\n                <td></td>\n                <td>\n                  <img src={song.image.url} className='image' />{song.name}\n                </td>\n                <td>\n                    {displayList(song.artists)}\n                </td>\n                <td>\n                    {song.album}\n                </td>\n                <td></td>\n                <td>\n                  {song.popularity}.\n                </td>\n                <td></td>\n              </tr>\n          ))}\n        </Table>\n      </>\n    );\n}"]},"metadata":{},"sourceType":"module"}